plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.protobuf' version '0.9.4'
    id 'checkstyle'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()

    flatDir { dirs "lib" }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(':HIRS_Utils')
    implementation project(':HIRS_Structs')


    implementation libs.bouncycastle
    implementation libs.commons.codec
    implementation libs.commons.io
    implementation libs.commons.lang3
    implementation libs.hibernate.core
    implementation libs.guava
    implementation libs.jackson.core
    implementation libs.jackson.databind
    implementation libs.jakarta.persistence.api
    implementation libs.jakarta.xml
    implementation libs.log4j.api
    implementation libs.log4j.core
    implementation libs.minimal.json
    implementation libs.pci
    implementation libs.protobuf.java
    implementation libs.spring.data.jpa.datatables
    implementation libs.spring.boot.starter.data.jpa
    implementation libs.spring.retry
    implementation libs.spring.boot.starter.web

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    compileOnly libs.spotbugs.annotations
    annotationProcessor libs.spotbugs.annotations

    testImplementation libs.commons.io
    testImplementation libs.hamcrest
    testImplementation libs.junit.jupiter
    testImplementation libs.junit.platform.launcher
    testImplementation libs.mockito.core
    testImplementation libs.spring.test

    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
}
checkstyle {
    toolVersion = '10.12.7'
    configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
}
// https://github.com/checkstyle/checkstyle/issues/14211#issuecomment-1884129948
configurations.checkstyle {
    resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
        select("com.google.guava:guava:0")
    }
}
checkstyleMain {
    source = 'src/main/java'
}
checkstyleTest {
    source = 'src/test/java'
}
tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.24.3'
    }
}
sourceSets {
    main {
        proto {
            srcDir '../HIRS_Provisioner.NET/hirs/Resources'
        }
    }
}

test {
    useJUnitPlatform()
}
