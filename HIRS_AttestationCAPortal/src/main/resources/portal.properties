# General notes:
# Properties are processed using an expression processor. That said, properties can inherit the
# values of other properties.
#
# In example the processor will resolve the value of aca.both as 'hello world!'.
# aca.hello        = hello
# aca.world        = world!
# aca.both         = ${aca.hello} ${aca.world}
#
# ACA Directories
#   root:           the root directory of ACA related files
#   certificates:   the directory for ACA certificate files
aca.directories.root=/etc/hirs/aca
aca.directories.certificates=${aca.directories.root}/certificates
# ACA certificate related properties. These are generic properties that apply to the creation of
# any certificate that the ACA is responsible for creating.
#   validity: the number of days that credentials generated by the ACA are valid.
aca.certificates.validity=3652
# ACA key store properties
#   alias:      the alias to reference the ACA key and certificate by
#   location:   the absolute path to the ACA key store.
#   password:   key store password
aca.keyStore.alias=HIRS_ACA_KEY
aca.keyStore.location=${aca.directories.certificates}/keyStore.jks
aca.keyStore.password=
# ACA setup/initialization properties. These properties are used exclusively by the ACA
# initialization process. Generally these properties do not need to be modified
#
#   keySize:        the default key size of the ACA key pair stored within the trust store
#   subjectName:    the CN of the generate X509 certificate
#   expiration:     the number of days that the generated X509 certificate will expire
aca.setup.keyStore.keySize=2048
aca.setup.keyStore.subjectName=HIRS_AttestationCA_Endorsement
aca.setup.keyStore.expiration=${aca.certificates.validity}